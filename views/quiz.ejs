
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/css/style.css">
  

  <script src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
<script src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>


  <!-- Other head elements go here -->
</head>

<body id="ih8aja">
    <div id="icc0zh" class="gjs-grid-row">
        <div id="ie72tm" class="gjs-grid-column">
            <div id="iaxu29" class="gjs-grid-row">
                <div id="ihvycs" class="gjs-grid-column"><a href="/"><img src="assets/screenshot_2023_12_09_154651.png"
                        id="i2858l" /></a></div>
                <div id="ijz2il" class="gjs-grid-row">
                    <div id="i4jelk" class="gjs-grid-row">
                        <div class="gjs-grid-column"><a class="gjs-link-box"><a id="ic9zjj" class="gjs-link" href = "about"><b
                                        id="iqktgs">About</b></a></a></div>
                        <div class="gjs-grid-column"><a class="gjs-link-box"><a id="ifc5o6" class="gjs-link" href = "courses"><b
                                        id="in8p5s">Courses</b></a></a></div>
                        <div class="gjs-grid-column"><a class="gjs-link-box"><a id="ibfz2h" class="gjs-link" href = "membership"><b
                                        id="ijhl8p">Membership</b></a></a></div>
                        <div class="gjs-grid-column"><a class="gjs-link-box"><a id="ibfz2h" class="gjs-link" href = "quiz"><b
                                            id="ijhl8p">Quiz</b></a></a></div>
                    </div>
                </div>
                <div id="i5yj05" class="gjs-grid-column">
                    <div id="iy8r2j" class="gjs-grid-row">
                        <div id="ivlr3b" class="gjs-grid-column"><a id="i5pnih" class="gjs-button">Donate</a></div>
                        <div id="isc1q6" class="gjs-grid-column"><a id="iufbq5" class="gjs-button">Register</a></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
  
    
    <div id="quiz-container"></div>

    
    <div id="igdcev" class="gjs-grid-row">
        <div id="i1rabp" class="gjs-grid-column">
            <div id="ix5emz" class="gjs-grid-row">
                <div id="isx4da" class="gjs-grid-column">
                    <div id="iwynmv"><b>Dollar Sense</b></div>
                </div>
                <div id="iqn9gj" class="gjs-grid-column"><a title="" href="##" id="i5ozxt"
                        class="gjs-link">Pricing<br /></a><a href="##" id="iuxhsq" class="gjs-link">Privacy Policy</a><a
                        href="##" id="ip8wog" class="gjs-link">Contact Us<br /></a></div>
            </div>
            <div id="inpinf" class="gjs-text-blue">Copyright Â© 2023 Dollar Sense</div>
        </div>
    </div>
</body>


</html>

<script>
    function Quizzo() {
        const [showResults, setShowResults] = React.useState(false);
        const [currentQuestion, setCurrentQuestion] = React.useState(0);
        const [score, setScore] = React.useState(0);

        const questions = [
        {
            text: "What is Credit?",
            options: [
                { id: 0, text: "the reputation you have among local vendors", facts: false },
                { id: 1, text: "the amount of money you have", facts: false },
                { id: 2, text: "The ability to borrow money or acess goods  or servis with the understanding that payment is done at a later date", facts: true },
                { id: 3, text: "the governments records of wheter you paid taxes or not", facts: false },
            ],
            },
            {
            text: "Why is credit Imporant?",
            options: [
                { id: 0, text: "it affects your ability to make huge purcahses or get loans", facts: true },
                { id: 1, text: "it can prevent you from getting married", facts: false },
                { id: 2, text: "you get a party if your credit is good", facts: false },
                { id: 3, text: "having a good credit  makes you rich", facts: false },
            ],
            },
            {
            text: "Which of the following is NOT one of the four types of credit?",
            options: [
                { id: 0, text: "Spinning Credit", facts: true },
                { id: 1, text: "Installment Credit", facts: false },
                { id: 2, text: "Open Credit", facts: false },
                { id: 3, text: "Closed Credit", facts: false },
            ],
            },
            {
            text: "What is installment credit?",
            options: [
                { id: 0, text: "paying money all at once for a purchase", facts: false },
                { id: 1, text: "borrowing a set amoutn and paying it back over in installments", facts: true },
                { id: 2, text: "a preset credit limit with flexible repayment terms", facts: false },
                { id: 3, text: "borrowing for a specific purpose typically fore homebuying", facts: false },
            ],
            },
            {
            text: "Which credit score is the best?",
            options: [
                { id: 0, text: "700", facts: false },
                { id: 1, text: "850", facts: true },
                { id: 2, text: "300", facts: true },
                { id: 3, text: "555", facts: false },
            ],
            },
        ];

        // Helper Functions

        const optionClicked = (facts) => {
            if (facts) {
                setScore(score + 1);
            }

            if (currentQuestion + 1 < questions.length) {
                setCurrentQuestion(currentQuestion + 1);
            } else {
                setShowResults(true);
            }
        };

        const restartGame = () => {
            setScore(0);
            setCurrentQuestion(0);
            setShowResults(false);
        };

        return React.createElement('div', { className: 'App' },
            React.createElement('h1', null, 'Credit Quiz!'),
            React.createElement('h2', null, `Score: ${score}`),
            showResults ? (
                React.createElement('div', { className: 'final-results' },
                    React.createElement('h1', null, 'Final Results'),
                    React.createElement('h2', null, `${score} out of ${questions.length} correct - (${(score / questions.length) * 100}%)`),
                    React.createElement('button', { onClick: () => restartGame() }, 'Restart game')
                )
            ) : (
                React.createElement('div', { className: 'question-card' },
                    React.createElement('h2', null, `Question: ${currentQuestion + 1} out of ${questions.length}`),
                    React.createElement('h3', { className: 'question-text' }, questions[currentQuestion].text),
                    React.createElement('ul', null,
                        questions[currentQuestion].options.map((option) =>
                            React.createElement('li', { key: option.id, onClick: () => optionClicked(option.facts) }, option.text)
                        )
                    )
                )
            )
        );
    }
    
const container = document.getElementById('quiz-container');
ReactDOM.render(React.createElement(Quizzo), container);

</script>



<!--
<script>
   

    function Quizzo(){
                const [showResults, setShowResults] = useState(false);
                const [currentQuestion, setCurrentQuestion] = useState(0);
                const [score, setScore] = useState(0);

                const questions = [
                    {
            text: "What is Credit?",
            options: [
                { id: 0, text: "the reputation you have among local vendors", facts: false },
                { id: 1, text: "the amount of money you have", facts: false },
                { id: 2, text: "The ability to borrow money or acess goods  or servis with the understanding that payment is done at a later date", facts: true },
                { id: 3, text: "the governments records of wheter you paid taxes or not", facts: false },
            ],
            },
            {
            text: "Why is credit Imporant?",
            options: [
                { id: 0, text: "it affects your ability to make huge purcahses or get loans", facts: true },
                { id: 1, text: "it can prevent you from getting married", facts: false },
                { id: 2, text: "you get a party if your credit is good", facts: false },
                { id: 3, text: "having a good credit  makes you rich", facts: false },
            ],
            },
            {
            text: "Which of the following is NOT one of the four types of credit?",
            options: [
                { id: 0, text: "Spinning Credit", facts: true },
                { id: 1, text: "Installment Credit", facts: false },
                { id: 2, text: "Open Credit", facts: false },
                { id: 3, text: "Closed Credit", facts: false },
            ],
            },
            {
            text: "What is installment credit?",
            options: [
                { id: 0, text: "paying money all at once for a purchase", facts: false },
                { id: 1, text: "borrowing a set amoutn and paying it back over in installments", facts: true },
                { id: 2, text: "a preset credit limit with flexible repayment terms", facts: false },
                { id: 3, text: "borrowing for a specific purpose typically fore homebuying", facts: false },
            ],
            },
            {
            text: "Which credit score is the best?",
            options: [
                { id: 0, text: "700", facts: false },
                { id: 1, text: "850", facts: true },
                { id: 2, text: "300", facts: true },
                { id: 3, text: "555", facts: false },
            ],
            },
        ];

        // Helper Functions

        /* A possible answer was clicked */
        const optionClicked = (facts) => {
            // Increment the score
            if (facts) {
            setScore(score + 1);
            }

            if (currentQuestion + 1 < questions.length) {
            setCurrentQuestion(currentQuestion + 1);
            } else {
            setShowResults(true);
            }
        };

       
        const restartGame = () => {
            setScore(0);
            setCurrentQuestion(0);
            setShowResults(false);
        };

        return (

            <div className="App">
            
            <h1>Credit Quiz!</h1>

            
            <h2>Score: {score}</h2>

           
            {showResults ? (
                
                <div className="final-results">
                <h1>Final Results</h1>
                <h2>
                    {score} out of {questions.length} correct - (
                    {(score / questions.length) * 100}%)
                </h2>
                <button onClick={() => restartGame()}>Restart game</button>
                </div>
            ) : (
                
                <div className="question-card">
                
                <h2>
                    Question: {currentQuestion + 1} out of {questions.length}
                </h2>
                <h3 className="question-text">{questions[currentQuestion].text}</h3>

              
                <ul>
                    {questions[currentQuestion].options.map((option) => {
                    return (
                        <li
                        key={option.id}
                        onClick={() => optionClicked(option.facts)}
                        >
                        {option.text}
                        </li>
                    );
                    })}
                </ul>
                </div>
            )}
            </div>
        );
    }
</script> -->